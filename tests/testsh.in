#! /usr/bin/env bash

SRCDIR=@SRCDIR@
BUILDDIR=@BUILDDIR@
BOOST_REGEX=@HAVE_BOOST_REGEX@

success() {
    echo "[ OK ] $1"
    true
}

fail() {
    echo "[FAIL] $1"
    false
}

EXPECT_EQ() {
    if test "$1" = "$2";
    then success "$3"
    else fail "$3. Expected '$1' got '$2'"
    fi
}

EXPECT_NE() {
    if test "$1" != "$2";
    then success "$3"
    else fail "$3. Expected '$1' got '$2'"
    fi
}

EXPECT_GT() {
    if test "$1" -gt "$2";
    then success "$3"
    else fail "$3. Expected '$1' > '$2'"
    fi
}

EXPECT_GE() {
    if test "$1" -ge "$2";
    then success "$3: $1 >= $2"
    else fail "$3. Expected '$1' >= '$2'"
    fi
}

EXPECT_LT() {
    if test "$1" -lt "$2";
    then success "$3"
    else fail "$3. Expected '$1' < '$2'"
    fi
}

EXPECT_LE() {
    if test "$1" -le "$2";
    then success "$3"
    else fail "$3. Expected '$1' <= '$2'"
    fi
}


EXPECT_SUCCESS() {
    if test "$?" = "0";
    then success "$1"
    else fail "$1"
    fi
}

set +o | grep pipefail > /dev/null && set -o pipefail
set -o errexit

TEST1=$SRCDIR/tests/test1.fasta
PATH=$BUILDDIR:$PATH
LANG=C # For sorting

echo -n "pwd: "; pwd
echo -n "ufasta: "; which ufasta
echo    "script: $1"

source "$1"
